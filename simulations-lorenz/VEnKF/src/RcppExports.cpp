// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// DeltaLorenz04M2Cpp
arma::vec DeltaLorenz04M2Cpp(const arma::vec X0, const double& F, const int& K, const double& dt, const int& M, const bool& newAlgo);
RcppExport SEXP _VEnKF_DeltaLorenz04M2Cpp(SEXP X0SEXP, SEXP FSEXP, SEXP KSEXP, SEXP dtSEXP, SEXP MSEXP, SEXP newAlgoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const double& >::type F(FSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const double& >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const bool& >::type newAlgo(newAlgoSEXP);
    rcpp_result_gen = Rcpp::wrap(DeltaLorenz04M2Cpp(X0, F, K, dt, M, newAlgo));
    return rcpp_result_gen;
END_RCPP
}
// Lorenz04M2SimCpp
arma::mat Lorenz04M2SimCpp(const arma::vec& Xinit, const int& F_Lor, const int& K_Lor, const double& dt, const int& M, const int& iter, const int& burn, const bool& newAlgo);
RcppExport SEXP _VEnKF_Lorenz04M2SimCpp(SEXP XinitSEXP, SEXP F_LorSEXP, SEXP K_LorSEXP, SEXP dtSEXP, SEXP MSEXP, SEXP iterSEXP, SEXP burnSEXP, SEXP newAlgoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type Xinit(XinitSEXP);
    Rcpp::traits::input_parameter< const int& >::type F_Lor(F_LorSEXP);
    Rcpp::traits::input_parameter< const int& >::type K_Lor(K_LorSEXP);
    Rcpp::traits::input_parameter< const double& >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const int& >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< const bool& >::type newAlgo(newAlgoSEXP);
    rcpp_result_gen = Rcpp::wrap(Lorenz04M2SimCpp(Xinit, F_Lor, K_Lor, dt, M, iter, burn, newAlgo));
    return rcpp_result_gen;
END_RCPP
}
// exactGradient
arma::mat exactGradient(const arma::vec& X, const int& K, const int& M, const double& dt, const double& F);
RcppExport SEXP _VEnKF_exactGradient(SEXP XSEXP, SEXP KSEXP, SEXP MSEXP, SEXP dtSEXP, SEXP FSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const double& >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< const double& >::type F(FSEXP);
    rcpp_result_gen = Rcpp::wrap(exactGradient(X, K, M, dt, F));
    return rcpp_result_gen;
END_RCPP
}
// exactGrad
arma::mat exactGrad(const arma::vec& X, const int& K);
RcppExport SEXP _VEnKF_exactGrad(SEXP XSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(exactGrad(X, K));
    return rcpp_result_gen;
END_RCPP
}
// RHS
arma::vec RHS(const arma::vec& X, const int& K, const double& F);
RcppExport SEXP _VEnKF_RHS(SEXP XSEXP, SEXP KSEXP, SEXP FSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type K(KSEXP);
    Rcpp::traits::input_parameter< const double& >::type F(FSEXP);
    rcpp_result_gen = Rcpp::wrap(RHS(X, K, F));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_VEnKF_DeltaLorenz04M2Cpp", (DL_FUNC) &_VEnKF_DeltaLorenz04M2Cpp, 6},
    {"_VEnKF_Lorenz04M2SimCpp", (DL_FUNC) &_VEnKF_Lorenz04M2SimCpp, 8},
    {"_VEnKF_exactGradient", (DL_FUNC) &_VEnKF_exactGradient, 5},
    {"_VEnKF_exactGrad", (DL_FUNC) &_VEnKF_exactGrad, 2},
    {"_VEnKF_RHS", (DL_FUNC) &_VEnKF_RHS, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_VEnKF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
